name: Scheduled regeneration
on: workflow_dispatch

jobs:
  generate-cask:
    name: Generate homebrew/cask data, pages and API
    runs-on: ubuntu-latest
    steps:
      - run: echo "cask"
  generate-core:
    name: Generate homebrew/core data, pages and API
    runs-on: ubunty-latest
    steps:
      - run: echo "core"
  generate-analytics:
    name: Generate analytics data
    runs-on: ubuntu-latest
    steps:
      - run: echo "analytics"
  generate-samples:
    name: Generate API samples
    runs-on: ubuntu-latest
    steps:
      - name: Generate samples
        run: echo "samples"
  build:
    needs: [generate-cask, generate-core, generate-analytics, generate-samples]
    runs-on: ubuntu-latest
    steps:
      - name: Generate site
        run: echo "generated"
  deploy:
    needs: build
    if: ${{ github.ref_name == 'master' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        run: echo "deployed"
  report-failure:
    name: Report deploy failure
    needs: deploy
    if: ${{ always() && needs.deploy.result == 'failure' }}
    permissions:
      issues: write
    env:
      GITHUB_TOKEN: ${{ secrets.HOMEBREW_GITHUB_PUBLIC_REPO_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: Detect existing deploy failure issue
        run: |
          EXISTING_ISSUE=$(gh issue list --author BrewTestBot --label 'deploy failure' | awk '{print $1}')
          echo "EXISTING_ISSUE=$EXISTING_ISSUE" >> $GITHUB_ENV
          echo "WORKFLOW_URL=https://github.com/Homebrew/formulae.brew.sh/actions/runs/$RUN_ID" >> $GITHUB_ENV
        env:
          RUN_ID: ${{ github.run_id }}
      - name: Report deploy failure
        if: ${{ needs.deploy.result == 'failure' }}
        run: |
          ISSUE_TITLE="Site deploy failed"
          ISSUE_BODY="The most recent site deploy attempt failed.\n\n[Click here to view the logs of the most recent failed run]($WORKFLOW_URL)"
          if [ -n "$EXISTING_ISSUE" ]; then
            gh issue edit "$EXISTING_ISSUE" --body "$ISSUE_BODY"
          else
            gh issue create --title "$ISSUE_TITLE" --body "$ISSUE_BODY" --label "deploy failure"
          fi
      - name: Report deploy success
        if: ${{ needs.deploy.result == 'success' }}
        run: |
          COMMENT_BODY="The most recent site deploy attempt succeeded.\n\n[Click here to view the logs of the successful run]($WORKFLOW_URL)"
          if [ -n "$EXISTING_ISSUE" ]; then
            gh issue comment "$EXISTING_ISSUE" --body "$COMMENT_BODY"
            gh issue close "$EXISTING_ISSUE"
          fi
  algolia_recrawl:
    needs: deploy
    name: Algolia Recrawl
    runs-on: ubuntu-latest
    steps:
      - name: Algolia crawler creation and recrawl
        run: echo "algolia"
