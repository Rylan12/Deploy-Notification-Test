name: Scheduled regeneration
on:
  workflow_dispatch:
    inputs:
      cask:
        description: Fail generate cask job
        required: true
        default: false
        type: boolean
      build:
        description: Fail build job
        required: true
        default: false
        type: boolean
      deploy:
        description: Fail deploy job
        required: true
        default: false
        type: boolean
      algolia:
        description: Fail Algolia job
        required: true
        default: false
        type: boolean

jobs:
  generate-cask:
    name: Generate homebrew/cask data, pages and API
    runs-on: ubuntu-latest
    steps:
      - name: Generate cask
        run: echo "cask"
      - name: Output
        if: ${{ inputs.cask }}
        run: foo
  build:
    needs: generate-cask
    runs-on: ubuntu-latest
    steps:
      - name: Generate site
        run: echo "generated"
      - name: Output
        if: ${{ inputs.build }}
        run: foo
  deploy:
    needs: build
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        run: echo "deploy"
      - name: Output
        if: ${{ inputs.deploy }}
        run: foo
  report-failure:
    name: Report deploy failure
    needs: deploy
    if: ${{ always() }}
    env:
      GH_TOKEN: ${{ secrets.HOMEBREW_GITHUB_PUBLIC_REPO_TOKEN }}
      REPO: ${{ github.repository }}
    runs-on: ubuntu-latest
    steps:
      - name: Detect existing deploy failure issue
        run: |
          EXISTING_ISSUE=$(gh issue list --repo "$REPO" --author Rylan12 --label 'deploy failure' | awk '{print $1}')
          echo "EXISTING_ISSUE=$EXISTING_ISSUE" >> $GITHUB_ENV
          echo "WORKFLOW_URL=https://github.com/Rylan12/Deploy-Notification-Test/actions/runs/$RUN_ID" >> $GITHUB_ENV
        env:
          RUN_ID: ${{ github.run_id }}
      - name: Report deploy failure
        if: ${{ needs.deploy.result == 'failure' }}
        run: |
          ISSUE_TITLE="Site deploy failed"
          ISSUE_BODY="The most recent site deploy attempt failed.\n\n[Click here to view the logs of the most recent failed run]($WORKFLOW_URL)"
          if [ -n "$EXISTING_ISSUE" ]; then
            gh issue edit "$EXISTING_ISSUE" --repo "$REPO" --body "$(echo -e "$ISSUE_BODY")"
          else
            gh issue create --title "$ISSUE_TITLE" --repo "$REPO" --label "deploy failure" --body "$(echo -e "$ISSUE_BODY")"
          fi
      - name: Report deploy success
        if: ${{ needs.deploy.result == 'success' }}
        run: |
          COMMENT_BODY="The most recent site deploy attempt succeeded.\n\n[Click here to view the logs of the successful run]($WORKFLOW_URL)"
          if [ -n "$EXISTING_ISSUE" ]; then
            gh issue comment "$EXISTING_ISSUE" --repo "$REPO" --body "$(echo -e "COMMENT_BODY")"
            gh issue close "$EXISTING_ISSUE" --repo "$REPO"
          fi
  algolia_recrawl:
    needs: deploy
    name: Algolia Recrawl
    runs-on: ubuntu-latest
    steps:
      - name: Algolia crawler creation and recrawl
        run: echo "algolia"
      - name: Output
        if: ${{ inputs.algolia }}
        run: foo
